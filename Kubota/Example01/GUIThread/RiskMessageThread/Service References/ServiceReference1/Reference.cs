//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiskMessageThread.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/SUOnlineRisk")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RiskMessageThread.ServiceReference1.RiskMessage))]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string playerNameField;
        
        private RiskMessageThread.ServiceReference1.MainState stateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string playerName {
            get {
                return this.playerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.playerNameField, value) != true)) {
                    this.playerNameField = value;
                    this.RaisePropertyChanged("playerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public RiskMessageThread.ServiceReference1.MainState state {
            get {
                return this.stateField;
            }
            set {
                if ((this.stateField.Equals(value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RiskMessage", Namespace="http://schemas.datacontract.org/2004/07/SUOnlineRisk")]
    [System.SerializableAttribute()]
    public partial class RiskMessage : RiskMessageThread.ServiceReference1.Message {
        
        private bool attackerField;
        
        private RiskMessageThread.ServiceReference1.ReinforcementCard cardField;
        
        private int[] cardIdsField;
        
        private string fromField;
        
        private string playerName1Field;
        
        private int[] rollField;
        
        private RiskMessageThread.ServiceReference1.MainState state1Field;
        
        private RiskMessageThread.ServiceReference1.ArmyPlacement[] territory_armyField;
        
        private string toField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool attacker {
            get {
                return this.attackerField;
            }
            set {
                if ((this.attackerField.Equals(value) != true)) {
                    this.attackerField = value;
                    this.RaisePropertyChanged("attacker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public RiskMessageThread.ServiceReference1.ReinforcementCard card {
            get {
                return this.cardField;
            }
            set {
                if ((object.ReferenceEquals(this.cardField, value) != true)) {
                    this.cardField = value;
                    this.RaisePropertyChanged("card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] cardIds {
            get {
                return this.cardIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.cardIdsField, value) != true)) {
                    this.cardIdsField = value;
                    this.RaisePropertyChanged("cardIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string from {
            get {
                return this.fromField;
            }
            set {
                if ((object.ReferenceEquals(this.fromField, value) != true)) {
                    this.fromField = value;
                    this.RaisePropertyChanged("from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="playerName", IsRequired=true)]
        public string playerName1 {
            get {
                return this.playerName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.playerName1Field, value) != true)) {
                    this.playerName1Field = value;
                    this.RaisePropertyChanged("playerName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] roll {
            get {
                return this.rollField;
            }
            set {
                if ((object.ReferenceEquals(this.rollField, value) != true)) {
                    this.rollField = value;
                    this.RaisePropertyChanged("roll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="state", IsRequired=true)]
        public RiskMessageThread.ServiceReference1.MainState state1 {
            get {
                return this.state1Field;
            }
            set {
                if ((this.state1Field.Equals(value) != true)) {
                    this.state1Field = value;
                    this.RaisePropertyChanged("state1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public RiskMessageThread.ServiceReference1.ArmyPlacement[] territory_army {
            get {
                return this.territory_armyField;
            }
            set {
                if ((object.ReferenceEquals(this.territory_armyField, value) != true)) {
                    this.territory_armyField = value;
                    this.RaisePropertyChanged("territory_army");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string to {
            get {
                return this.toField;
            }
            set {
                if ((object.ReferenceEquals(this.toField, value) != true)) {
                    this.toField = value;
                    this.RaisePropertyChanged("to");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MainState", Namespace="http://schemas.datacontract.org/2004/07/SUOnlineRisk")]
    public enum MainState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initialize = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distribute = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeCard = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewArmies = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdditionalArmies = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reinforce = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attack = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Roll = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Conquer = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttackDone = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReinforcementCard = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fortify = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Over = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReinforcementCard", Namespace="http://schemas.datacontract.org/2004/07/SUOnlineRisk")]
    [System.SerializableAttribute()]
    public partial class ReinforcementCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CardIdField;
        
        private string TerritoryNameField;
        
        private RiskMessageThread.ServiceReference1.ReinforcemenCardUnit UnitTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CardId {
            get {
                return this.CardIdField;
            }
            set {
                if ((this.CardIdField.Equals(value) != true)) {
                    this.CardIdField = value;
                    this.RaisePropertyChanged("CardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TerritoryName {
            get {
                return this.TerritoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryNameField, value) != true)) {
                    this.TerritoryNameField = value;
                    this.RaisePropertyChanged("TerritoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public RiskMessageThread.ServiceReference1.ReinforcemenCardUnit UnitType {
            get {
                return this.UnitTypeField;
            }
            set {
                if ((this.UnitTypeField.Equals(value) != true)) {
                    this.UnitTypeField = value;
                    this.RaisePropertyChanged("UnitType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmyPlacement", Namespace="http://schemas.datacontract.org/2004/07/SUOnlineRisk")]
    [System.SerializableAttribute()]
    public partial class ArmyPlacement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int numArmiesField;
        
        private string ownerField;
        
        private string territoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int numArmies {
            get {
                return this.numArmiesField;
            }
            set {
                if ((this.numArmiesField.Equals(value) != true)) {
                    this.numArmiesField = value;
                    this.RaisePropertyChanged("numArmies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                if ((object.ReferenceEquals(this.ownerField, value) != true)) {
                    this.ownerField = value;
                    this.RaisePropertyChanged("owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string territory {
            get {
                return this.territoryField;
            }
            set {
                if ((object.ReferenceEquals(this.territoryField, value) != true)) {
                    this.territoryField = value;
                    this.RaisePropertyChanged("territory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReinforcemenCardUnit", Namespace="http://schemas.datacontract.org/2004/07/SUOnlineRisk")]
    public enum ReinforcemenCardUnit : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Infantry = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cavalry = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Artillery = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wild = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRiskMessageService")]
    public interface IRiskMessageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/Request", ReplyAction="http://tempuri.org/IRiskMessageService/RequestResponse")]
        RiskMessageThread.ServiceReference1.RiskMessage Request(RiskMessageThread.ServiceReference1.RiskMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/Request", ReplyAction="http://tempuri.org/IRiskMessageService/RequestResponse")]
        System.Threading.Tasks.Task<RiskMessageThread.ServiceReference1.RiskMessage> RequestAsync(RiskMessageThread.ServiceReference1.RiskMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/Logon", ReplyAction="http://tempuri.org/IRiskMessageService/LogonResponse")]
        bool Logon(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/Logon", ReplyAction="http://tempuri.org/IRiskMessageService/LogonResponse")]
        System.Threading.Tasks.Task<bool> LogonAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/createGame", ReplyAction="http://tempuri.org/IRiskMessageService/createGameResponse")]
        int createGame(int mapId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/createGame", ReplyAction="http://tempuri.org/IRiskMessageService/createGameResponse")]
        System.Threading.Tasks.Task<int> createGameAsync(int mapId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/joinGame", ReplyAction="http://tempuri.org/IRiskMessageService/joinGameResponse")]
        bool joinGame(string name, int gameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/joinGame", ReplyAction="http://tempuri.org/IRiskMessageService/joinGameResponse")]
        System.Threading.Tasks.Task<bool> joinGameAsync(string name, int gameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/startGame", ReplyAction="http://tempuri.org/IRiskMessageService/startGameResponse")]
        bool startGame(string name, int gameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskMessageService/startGame", ReplyAction="http://tempuri.org/IRiskMessageService/startGameResponse")]
        System.Threading.Tasks.Task<bool> startGameAsync(string name, int gameId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRiskMessageServiceChannel : RiskMessageThread.ServiceReference1.IRiskMessageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RiskMessageServiceClient : System.ServiceModel.ClientBase<RiskMessageThread.ServiceReference1.IRiskMessageService>, RiskMessageThread.ServiceReference1.IRiskMessageService {
        
        public RiskMessageServiceClient() {
        }
        
        public RiskMessageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RiskMessageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskMessageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskMessageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RiskMessageThread.ServiceReference1.RiskMessage Request(RiskMessageThread.ServiceReference1.RiskMessage msg) {
            return base.Channel.Request(msg);
        }
        
        public System.Threading.Tasks.Task<RiskMessageThread.ServiceReference1.RiskMessage> RequestAsync(RiskMessageThread.ServiceReference1.RiskMessage msg) {
            return base.Channel.RequestAsync(msg);
        }
        
        public bool Logon(string name, string password) {
            return base.Channel.Logon(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> LogonAsync(string name, string password) {
            return base.Channel.LogonAsync(name, password);
        }
        
        public int createGame(int mapId) {
            return base.Channel.createGame(mapId);
        }
        
        public System.Threading.Tasks.Task<int> createGameAsync(int mapId) {
            return base.Channel.createGameAsync(mapId);
        }
        
        public bool joinGame(string name, int gameId) {
            return base.Channel.joinGame(name, gameId);
        }
        
        public System.Threading.Tasks.Task<bool> joinGameAsync(string name, int gameId) {
            return base.Channel.joinGameAsync(name, gameId);
        }
        
        public bool startGame(string name, int gameId) {
            return base.Channel.startGame(name, gameId);
        }
        
        public System.Threading.Tasks.Task<bool> startGameAsync(string name, int gameId) {
            return base.Channel.startGameAsync(name, gameId);
        }
    }
}
